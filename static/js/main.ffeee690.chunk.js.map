{"version":3,"sources":["context.js","SetupForm.js","Loading.js","Modal.js","AnswerModal.js","Home.js","App.js","index.js"],"names":["table","sports","history","politics","general_knowledge","science_nature","geography","mythology","art","mathematics","computers","AppContext","React","createContext","AppProvider","children","useState","homeOpen","isHomeOpen","waiting","setWaiting","isLoading","setIsLoading","questions","setQuestions","index","setIndex","ans","setAns","error","setError","isModalOpen","setIsModalOpen","correct","setCorrect","crtBtn","setCrtBtn","ansQs","setAnsQs","isAnsModalOpen","setIsAnsModalOpen","crtAns","setCrtAns","wrongAns","setWrongAns","lastQs","setLastQs","amount","category","difficulty","quiz","setQuiz","fetchQuestions","url","a","axios","catch","err","console","log","response","data","results","length","closeModal","Provider","value","nextQuestion","oldIndex","handleChange","e","name","target","handleSubmit","preventDefault","closeHome","openHome","useGlobalContext","useContext","SetupForm","className","htmlFor","style","color","type","id","onChange","min","max","fontSize","onClick","Loading","Modal","toFixed","AnswerModal","correct_answer","src","Home","alt","App","question","incorrect_answers","answers","tempIndex","Math","floor","random","push","dangerouslySetInnerHTML","__html","map","answer","key","oldValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffeee690.chunk.js","sourcesContent":["import axios from 'axios'\nimport React, { useState, useContext } from 'react'\n\nconst table = {\n  sports: 21,\n  history: 23,\n  politics: 24,\n  general_knowledge: 10,\n  science_nature: 17,\n  geography: 22,\n  mythology: 20,\n  art: 25,\n  mathematics: 19,\n  computers: 18\n}\n\nconst API_ENDPOINT = 'https://opentdb.com/api.php?'\n\n//const tempUrl = 'https://opentdb.com/api.php?amount=5&category=23&difficulty=easy&type=multiple'\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n\n  const [homeOpen, isHomeOpen] = useState(true)\n  const [waiting, setWaiting] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [questions, setQuestions] = useState([])\n  const [index, setIndex] = useState(0)\n  const [ans, setAns] = useState(false)\n  const [error, setError] = useState(false)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [correct, setCorrect] = useState(0)\n  const [crtBtn, setCrtBtn] = useState('')\n  const [ansQs, setAnsQs] = useState(0)\n  const [isAnsModalOpen, setIsAnsModalOpen] = useState(false)\n  const [crtAns, setCrtAns] = useState(false)\n  const [wrongAns, setWrongAns] = useState(false)\n  const [lastQs, setLastQs] = useState(false)\n\n  const [quiz, setQuiz] = useState({ amount: 5, category: 'general_knowledge', difficulty: 'easy' })\n\n  const fetchQuestions = async (url) => {\n    setIsLoading(true)\n    setWaiting(false)\n\n    const response = await axios(url).catch((err) => console.log(err));\n    if (response) {\n      const data = response.data.results;\n\n      if (data.length > 0) {\n        setQuestions(data)\n        setIsLoading(false)\n        setWaiting(false)\n        setError(false)\n      } else {\n        setWaiting(true)\n        setError(true)\n      }\n    }\n    else {\n      setWaiting(true)\n    }\n  }\n\n  const openHome = () => {\n    isHomeOpen(true)\n  }\n\n  const closeHome = () => {\n    isHomeOpen(false)\n    closeModal()\n  }\n\n  const nextQuestion = () => {\n    setIsAnsModalOpen(false)\n    setCrtAns(false)\n    setWrongAns(false)\n    setAns(false)\n\n    setIndex((oldIndex) => {\n      const index = oldIndex + 1\n      if (index > questions.length - 1) {\n        setIsModalOpen(true)\n        return 0\n      }\n      else { return index }\n    })\n  }\n\n  const closeModal = () => {\n    setIsModalOpen(false)\n    setWaiting(true)\n    setCorrect(0)\n    setAnsQs(0)\n    setLastQs(false)\n    setQuiz({ amount: 5, category: 'general_knowledge', difficulty: 'easy' })\n  }\n\n  const handleChange = (e) => {\n    const name = e.target.name\n    const value = e.target.value\n    setQuiz({ ...quiz, [name]: value })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { amount, category, difficulty } = quiz\n    const url = `${API_ENDPOINT}amount=${amount}&difficulty=${difficulty}&category=${table[category]}&type=multiple`\n    fetchQuestions(url)\n  }\n\n  return (\n    <AppContext.Provider value={{\n      waiting, isModalOpen, isLoading, questions, index, error, correct, quiz, ans, crtBtn, ansQs,\n      isAnsModalOpen, crtAns, wrongAns, homeOpen, lastQs,\n      setAns, setCorrect, nextQuestion, closeModal, handleChange, handleSubmit, setLastQs,\n      setCrtBtn, setAnsQs, setIsAnsModalOpen, setCrtAns, setWrongAns, isHomeOpen, closeHome, openHome\n    }}>{children}</AppContext.Provider>\n  )\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst SetupForm = () => {\n  const { quiz, handleChange, handleSubmit, error } = useGlobalContext()\n  \n  return (\n    <main>\n      <section className=\"quiz quiz-small\">\n        <form className=\"setup-form\">\n\n          {/* amount */}\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\" style={{ color: '#26808F' }}>number of questions</label>\n            <input type=\"number\" name=\"amount\" id=\"amount\" value={quiz.amount} onChange={handleChange}\n              className=\"form-input\" min={1} max={50} /> <p style={{ fontSize : '.75rem' }}>(max : 49)</p>\n          </div>\n          {/* category */}\n          <div className=\"form-control\">\n            <label htmlFor=\"category\" style={{ color: '#26808F' }}>select category</label>\n            <select name=\"category\" id=\"category\" value={quiz.category} onChange={handleChange}\n              className=\"form-input\">\n            <option value=\"history\">History</option>\n            <option value=\"politics\">Politics</option>\n            <option value=\"sports\">Sports</option>\n            <option value=\"general_knowledge\">General Knowledge</option>\n            <option value=\"science_nature\">Science & Nature</option>\n            <option value=\"geography\">Geography</option>\n            <option value=\"mythology\">Mythology</option>\n            <option value=\"art\">Art</option>\n            <option value=\"mathematics\">Mathematics</option>\n            <option value=\"computers\">Computers</option>\n            </select>\n          </div>\n          {/* difficulty */}\n          <div className=\"form-control\">\n            <label htmlFor=\"difficulty\" style={{ color:'#26808F' }}>select difficulty level</label>\n            <select name=\"difficulty\" id=\"difficulty\" value={quiz.difficulty} onChange={handleChange}\n              className=\"form-input\">\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n            </select>\n          </div>\n        {error && (<p className = \"error\">can't generate Qs! please try different options</p>)}\n        <button className=\"submit-btn\" onClick={handleSubmit}>start quiz</button>\n        </form>\n      </section>\n    </main>\n  )\n}\n\nexport default SetupForm\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <main>\n      <div className='loading'></div>\n    </main>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst Modal = () => {\n  const { isModalOpen, closeModal, questions, correct, ansQs, openHome } = useGlobalContext()\n  //console.log(`Questions answered : ${ansQs}`);\n  return (\n    <div className={`${isModalOpen ? 'modal-container isOpen' : 'modal-container'}`}>\n      <div className=\"modal-content\">\n        <div className=\"results\">\n          <div className=\"result_item\">\n            <p>Answered Qs : </p>\n            <h3>{ansQs}/{questions.length}</h3>\n          </div>\n          <div className=\"result_item\">\n            <p>Skipped Qs : </p>\n            <h3>{questions.length - ansQs}/{questions.length}</h3>\n          </div>\n          <div className=\"result_item\">\n            <p>Correct Ans : </p>\n            <h3>{correct}/{questions.length}</h3>\n          </div>\n        </div>\n        <div className=\"result_score\">\n          <div className=\"score\">\n            <p>Total Score :</p>\n            <h1>{((correct / questions.length) * 100).toFixed(0)}%</h1>\n          </div>\n        </div>\n        <div className=\"result_buttons\">\n          <button className=\"close-btn\" onClick={closeModal}>start again</button>\n          <button className=\"close-btn\" onClick={openHome}>end quiz</button>\n        </div>\n      </div>\n    </div >\n  )\n}\n\nexport default Modal\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst AnswerModal = ({ correct_answer }) => {\n    const { isAnsModalOpen, nextQuestion, crtAns, wrongAns, lastQs } = useGlobalContext()\n\n    return (\n        <div className={`${isAnsModalOpen ? 'modal-container isOpen' : 'modal-container'}`}>\n            <div className=\"modal-content\">\n                {crtAns && (<div><img src=\"check_icon.png\" className=\"result_icons\" />\n                    <h3 style={{ color: '#26808F ' }}>Great !</h3></div>)}\n                {wrongAns && (<div>\n                    <img src=\"cross_icon.png\" className=\"result_icons\" />\n                    <p className=\"crt-ans\">correct answer : <span style={{ color: '#26808F' }}>{correct_answer}</span></p>\n                </div>\n                )}\n                <button className=\"close-btn\" onClick={nextQuestion}>\n                    {lastQs ? 'Get Result' : 'Next Question'}</button>\n            </div>\n        </div>\n    )\n}\n\nexport default AnswerModal","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst Home = () => {\n    const { closeHome } = useGlobalContext()\n    return (\n        <main>\n            <section className=\"quiz logo-container\">\n                <img src=\"logo.png\" className=\"logo\" alt=\"logo\" />\n                <button className=\"close-btn\" onClick={closeHome}>setup quiz</button>\n            </section>\n        </main>\n    )\n}\n\nexport default Home","import React from 'react'\nimport { useGlobalContext } from './context'\n\nimport SetupForm from './SetupForm'\nimport Loading from './Loading'\nimport Modal from './Modal'\nimport AnswerModal from './AnswerModal'\nimport Home from './Home'\n\nconst App = () => {\n  const { waiting, isLoading, index, questions, setAns, setAnsQs, setCrtAns,\n    setWrongAns, homeOpen, nextQuestion, setCorrect, setIsAnsModalOpen, setLastQs } = useGlobalContext()\n\n  if (homeOpen) return <Home />\n  if (waiting) return <SetupForm />\n  if (isLoading) return <Loading />\n\n  const { question, incorrect_answers, correct_answer } = questions[index]\n\n  let answers = [...incorrect_answers]\n  const tempIndex = Math.floor(Math.random() * 4)\n  if (tempIndex === 3) {\n    answers.push(correct_answer)\n  } else {\n    answers.push(answers[tempIndex])\n    answers[tempIndex] = correct_answer\n  }\n\n  return (\n    <main>\n      <AnswerModal correct_answer={correct_answer} />\n      <Modal />\n      <section className=\"quiz quiz-small\">\n        <p className=\"questions-count\">Question : {index + 1}/{questions.length}</p>\n        <article className=\"container\">\n          <h2 dangerouslySetInnerHTML={{ __html: question }} />\n          <div className=\"btn-container\">\n\n            {answers.map((answer, id) => {\n              return (\n                <button className=\"answer-btn\" key={id} dangerouslySetInnerHTML={{ __html: answer }}\n                  value={answer} onClick={(e) => {\n                    e.preventDefault();\n\n                    if (e.target.value === correct_answer) {\n                      setCorrect((oldValue) => oldValue + 1)\n                      setCrtAns(true)\n                    } else {\n                      setWrongAns(true)\n                    }\n                    setIsAnsModalOpen(true)\n                    setAns(true)\n                    setAnsQs((oldValue) => oldValue + 1)\n                    if ((index + 1) === questions.length) { setLastQs(true) }\n                  }\n                  }\n                />\n              )\n            })}\n          </div>\n        </article>\n\n        <button className=\"next-question\" onClick={() => nextQuestion()}>\n          skip question</button>\n      </section>\n    </main >)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}